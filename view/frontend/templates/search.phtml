<?php
/**@var Hunters\SearchShopMap\ViewModel\Search $viewModel*/
$viewModel = $this->getData('viewModel');

$myCollection = $viewModel->getMyCustomCollection()->getData();
$resultCoordinate = $viewModel->coordinateArray($myCollection);
$resultState = $viewModel->stateAndCoordianateArray($myCollection);

?>

<form action="#" accept-charset="utf-8" method="POST" onSubmit="return false;">
        <input  class="zipsearch" type="search" name="zipjson">
        <input  class="sendZip" type="submit" value="Send">
</form>
</br>
<div>
    <span class="cord"></span>
    </br>
    <span class="state"></span>
</div>
</br>
<div id="google-map" ></div>

<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=YOU-API-KEY&callback=initMap">
</script>

<script type="text/javascript">
    require([ 'jquery', 'jquery/ui'], function($){
        $(document).ready(function($) {
            let array_cordinate = <?php echo json_encode($resultCoordinate); ?>;
            let array_state = <?php echo json_encode($resultState); ?>;
            var s = '<script src="https://polyfill.io/v3/polyfill.min.js?features=default"/>';
            var ss = '<script src="https://unpkg.com/@google/markerclustererplus@4.0.1/dist/markerclustererplus.min.js"/>';
            $('head').append(s);
            $('head').append(ss);
            $(".sendZip").click(function (e) {
                    var zip = $(".zipsearch").val();
                    var url = "<?php echo $this->getUrl('searchjson/page/ajax', ['_secure' => false]) ?>";
                    $.ajax({
                        url: url,
                        type: "POST",
                        data: {
                            zip:zip
                        },
                        showLoader: true,
                        cache: false,
                        complete: function(response) {
                            console.log(response);
                            var res = $.parseJSON(response.responseText);
                            if (($.parseJSON(res.loc)) !== null) {
                                var coordinate = ($.parseJSON(res.loc)).coordinate;
                                var state = ($.parseJSON(res.loc)).state;
                                $(".cord").text("Your coordinates: lat = " + coordinate.lat + "; lng = " + coordinate.lng + ";");
                                $(".state").text("Your coordinates:  " + state + ";");
                                initMap(coordinate);
                                // initMapState(coordinate, state);
                            }
                            else {
                                alert("No search you zip: "+zip+" code!");
                            }
                        },
                        error: function (xhr, status, errorThrown) {
                            console.log('Error happens. Try again.');
                        }
                    });
            });

            const  locations = array_cordinate;

            function initMap(myCoordinate) {
                const  myLatLng = myCoordinate;
                const map = new google.maps.Map(document.getElementById("google-map"), {
                zoom: 10,
                center: myLatLng,
            });
                new google.maps.Marker({
                     position: myLatLng,
                     map,
                     title: "My marker!",
                     icon: {
                         url: "https://upload.wikimedia.org/wikipedia/commons/3/38/Simpleicons_Places_flag-map-marker-1.svg",
                         scaledSize: new google.maps.Size(35, 35)
                        }
                    });
                const labels = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
                const markers = locations.map((location, i) => {
                return new google.maps.Marker({
                position: location,
                label: labels[i % labels.length],
            });
            });
                new MarkerClusterer(map, markers, {
                imagePath: "https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m",
            });
            }

            function initMapState(myCoordinate, mystate) {
                let new_array_state = [];
                array_state.forEach((element) => {
                    if (element.state == mystate){
                        new_array_state.push(element.coordinate);
                    }
                })
                const locationsState = new_array_state;
                const  myLatLng = myCoordinate;
                const map = new google.maps.Map(document.getElementById("google-map"), {
                    zoom: 10,
                    center: myLatLng,
                });
                new google.maps.Marker({
                    position: myLatLng,
                    map,
                    title: "My marker!",
                    icon: {
                        url: "https://upload.wikimedia.org/wikipedia/commons/3/38/Simpleicons_Places_flag-map-marker-1.svg",
                        scaledSize: new google.maps.Size(35, 35)
                    }
                });
                const labels = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";

                function state(markers) {
                    var bounds = new google.maps.LatLngBounds();
                    var length = markers.length;
                    for (var i = 0; i < length; i++) {
                        bounds.extend(new google.maps.LatLng(markers[i].lat, markers[i].lng));
                        map.fitBounds(bounds);
                    }
                }

                const markers = locationsState.map((location, i) => {
                    return new google.maps.Marker({
                        position: location,
                        label: labels[i % labels.length],
                    });
                });
                state(locationsState);
                new MarkerClusterer(map, markers, {
                    imagePath: "https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m",
                });
            }
        });
    });
</script>

